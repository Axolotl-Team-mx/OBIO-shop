{"version":3,"sources":["store.js","utils/routes/StoreRoutes.js","assets/img/logo1.png","components/NavigationBar/index.js","components/ScrollToTop/index.js","components/LoaderLogo/index.js","routers/StoreRouter.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","initialState","cart","cartItems","localStorage","getItem","JSON","parse","userLogin","userInfo","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","routes","path","name","exact","component","lazy","NavigationBar","Navbar","fixed","collapseOnSelect","variant","expand","Container","Brand","href","height","src","logo1","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","LoaderLogo","className","StoreRouter","history","Suspense","fallback","map","route","idx","render","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"gPAIMA,EAAUC,0BAAgB,IAU1BC,EAAe,CACnBC,KAAM,CACJC,UAVyBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,IAUFG,UAAW,CAAEC,SARaL,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,OAQEK,EAAa,CAACC,KAMLC,EALDC,sBACZd,EACAE,EACAa,8BAAoBC,kBAAe,WAAf,EAAmBL,K,+BCZ1BM,EATA,CACb,CACEC,KAAM,IACNC,KAAM,OACNC,OAAO,EACPC,UAPeC,gBAAK,kBAAM,kC,gBCDf,MAA0B,kC,eCI1B,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,CACEC,MAAM,MACNC,kBAAgB,EAChBC,QAAQ,YACRC,OAAO,KAJT,SAMI,cAACC,EAAA,EAAD,UACA,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,SACE,qBAAKC,OAAO,KAAKC,IAAKC,UCVjB,SAASC,IACtB,IAAQC,EAAaC,cAAbD,SAIR,OAHAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IACG,K,MCPM,SAASK,IACtB,OAAO,qBAAKC,UAAU,cAAcT,IAAKC,ICM5B,SAASS,EAAT,GAAkC,EAAXC,QACpC,OACE,qCACE,cAACT,EAAD,IACA,cAACZ,EAAD,IACA,cAAC,IAAMsB,SAAP,CAAgBC,SAAU,cAACL,EAAD,IAA1B,SACE,cAAC,IAAD,iBACGxB,QADH,IACGA,OADH,EACGA,EAAQ8B,KAAI,SAACC,EAAOC,GACnB,OAAOD,EAAM3B,UACX,cAAC,IAAD,CAEEH,KAAM8B,EAAM9B,KACZE,MAAO4B,EAAM5B,MACbD,KAAM6B,EAAM7B,KACZ+B,OAAQ,SAACC,GAAD,OAAW,cAACH,EAAM3B,UAAP,eAAqB8B,MAJnCF,GAML,eCTDG,MAdf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACElC,KAAK,IACLC,KAAK,QACL+B,OAAQ,SAACC,GAAD,OAAW,cAACR,EAAD,eAAiBQ,YCG/BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASZ,OACP,cAAC,IAAD,CAAUrC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFkD,SAASC,eAAe,SAM1BX,M","file":"static/js/main.cbafe146.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst reducer = combineReducers({});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;","import { lazy } from \"react\";\nconst HomeScreen = lazy(() => import(\"../../views/Store/HomeScreen\"));\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    exact: true,\n    component: HomeScreen,\n  },\n];\n\nexport default routes;\n","export default __webpack_public_path__ + \"static/media/logo1.38ec1c06.png\";","import React, { useState } from \"react\";\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\nimport logo1 from \"../../assets/img/logo1.png\";\nimport \"./styles.css\"\nexport default function NavigationBar() {\n  return (\n    <Navbar\n      fixed=\"top\"\n      collapseOnSelect\n      variant=\"secondary\"\n      expand=\"lg\"\n    >\n        <Container>\n        <Navbar.Brand href=\"/\">\n          <img height=\"40\" src={logo1}/>\n          \n        </Navbar.Brand>\n\n        </Container>\n    </Navbar>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return null;\n}\n","import \"./styles.css\";\nimport logo1 from \"../../assets/img/logo1.png\";\nexport default function LoaderLogo() {\n  return <img className=\"loader-logo\" src={logo1} />;\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport routes from \"../utils/routes/StoreRoutes\";\n\n// Components\nimport NavigationBar from \"../components/NavigationBar\";\nimport ScrollToTop from \"../components/ScrollToTop\";\nimport LoaderLogo from \"../components/LoaderLogo\";\n\nexport default function StoreRouter({ history }) {\n  return (\n    <>\n      <ScrollToTop />\n      <NavigationBar />\n      <React.Suspense fallback={<LoaderLogo />}>\n        <Switch>\n          {routes?.map((route, idx) => {\n            return route.component ? (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                render={(props) => <route.component {...props} />}\n              />\n            ) : null;\n          })}\n        </Switch>\n      </React.Suspense>\n    </>\n  );\n}\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport StoreRouter from \"./routers/StoreRouter\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          name=\"store\"\n          render={(props) => <StoreRouter {...props} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}